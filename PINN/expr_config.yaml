experiments:
  exp1: # 实验名称
    d: 2 # 方程维度
    optimizer: 'lm' # 优化器，可选 lm, adam, lbfgs
    optimizer_args: # 优化器参数，根据优化器确定
      maxiter: 2000
      tol: 1.0e-18
    num_interior: 1000 # 内部训练点数量
    num_boundary: 200 # 边界训练点数量
    layers: [2, 8, 8, 1] # 神经网络层结构，注意第一层的数字必须和 d 相等
    laplacian_method: 'original' # 拉普拉斯算子计算方法。original 是使用 hessian 矩阵的迹计算，lapjax 是使用 lapjax 库计算

#  exp2:
#    d: 2
#    optimizer: 'lm'
#    optimizer_args:
#      maxiter: 2000
#      tol: 1.0e-18
#    num_interior: 1000
#    num_boundary: 200
#    layers: [2, 8, 8, 1]
#    laplacian_method: 'lapjax'
#
#  exp3:
#    d: 3
#    optimizer: 'lm'
#    optimizer_args:
#      maxiter: 2000
#      tol: 1.0e-18
#    num_interior: 2000
#    num_boundary: 400
#    layers: [3, 8, 8, 1]
#    laplacian_method: 'original'
#
#  exp4:
#    d: 3
#    optimizer: 'lm'
#    optimizer_args:
#      maxiter: 2000
#      tol: 1.0e-18
#    num_interior: 2000
#    num_boundary: 400
#    layers: [3, 8, 8, 1]
#    laplacian_method: 'lapjax'
#
#  exp5:
#    d: 2
#    optimizer: 'lm'
#    optimizer_args:
#      maxiter: 2000
#      tol: 1.0e-18
#    num_interior: 1000
#    num_boundary: 200
#    layers: [2, 16, 16, 1]
#    laplacian_method: 'original'
#
#  exp6:
#    d: 2
#    optimizer: 'lm'
#    optimizer_args:
#      maxiter: 2000
#      tol: 1.0e-18
#    num_interior: 1000
#    num_boundary: 200
#    layers: [2, 16, 16, 1]
#    laplacian_method: 'lapjax'
#
#  exp7:
#    d: 15
#    optimizer: 'adam'
#    optimizer_args:
#      learning_rate: 1.0e-3
#    training_args:
#      epochs: 10000
#    num_interior: 5000
#    num_boundary: 1000
#    layers: [15, 32, 32, 1]
#    laplacian_method: 'original'
#
#  exp8:
#    d: 15
#    optimizer: 'adam'
#    optimizer_args:
#      learning_rate: 1.0e-3
#    training_args:
#      epochs: 10000
#    num_interior: 5000
#    num_boundary: 1000
#    layers: [15, 32, 32, 1]
#    laplacian_method: 'lapjax'

test:
  test_interior: 10000
  test_boundary: 2000